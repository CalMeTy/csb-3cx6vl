{"version":3,"sources":["src/index.js"],"names":["currentPosition","playersLost","players","name","piece","currentSpace","isBankrupt","money","properties","propertyNameList","rrOwned","inJail","doubles","jailRoll","makeAChoice","Math","random","buyProperty","thisProperty","value","purchased","ownedBy","playerNumber","console","log","push","concat","propertyNames","i","length","theBoard","spaceAction","player","propType","undefined","rent","youLose","randoCard","currentspace","floor","currentRoll","rollDice","dieOne","dieTwo","movePlayer","whichSpace","space","switchPlayer","playerTurn"],"mappings":";AAIA,IAAIA,EAAkB,EAkClBC,EAAc,GAEdC,EAAU,CACZ,CACEC,KAAM,SACNC,MAAO,OACPC,aAAc,EACdC,YAAY,EACZC,MAAO,KACPC,WAAY,GACZC,iBAAkB,GAClBC,QAAS,EACTC,QAAQ,EACRC,SAAS,EACTC,SAAU,EAEVC,YAAWA,WACT,OAAoB,EAAhBC,KAAKC,SAAe,IAO1BC,YAAWA,SAACC,GACN,KAAKX,OAASW,EAAaC,OAE7B,KAAKZ,OAASW,EAAaC,MAE3BD,EAAaE,WAAY,EAEzBF,EAAaG,QAAUC,EACvBC,QAAQC,IAAIF,GAEZ,KAAKd,WAAWiB,KAAKP,IAIrBK,QAAQC,IAAGE,oBAAAA,OAAqBR,EAAaf,KAAIuB,MAAAA,OAAK,KAAKvB,QAI/DwB,cAAaA,WACX,IAAK,IAAIC,EAAI,EAAGA,EAAI,KAAKpB,WAAWqB,OAAQD,IAC1C,KAAKnB,iBAAiBgB,KAAK,KAAKjB,WAAWoB,GAAGzB,MAC9CoB,QAAQC,IAAII,GAEd,OAAO,KAAKnB,mBAGhB,CACEN,KAAM,SACNC,MAAO,MACPC,aAAc,EACdC,YAAY,EACZC,MAAO,KACPC,WAAY,GACZE,QAAS,EACTC,QAAQ,EACRC,SAAS,EACTC,SAAU,EAEVC,YAAWA,WACT,OAAoB,EAAhBC,KAAKC,SAAe,IAO1BC,YAAWA,SAACC,GACN,KAAKX,OAASW,EAAaC,OAE7B,KAAKZ,OAASW,EAAaC,MAE3BD,EAAaE,WAAY,EAEzBF,EAAaG,QAAUC,EACvBC,QAAQC,IAAIF,GAEZ,KAAKd,WAAWiB,KAAKP,IAIrBK,QAAQC,IAAGE,oBAAAA,OAAqBR,EAAaf,KAAIuB,MAAAA,OAAK,KAAKvB,SAIjE,CACEA,KAAM,WACNC,MAAO,UACPC,aAAc,EACdC,YAAY,EACZC,MAAO,KACPC,WAAY,GACZE,QAAS,EACTC,QAAQ,EACRC,SAAS,EACTC,SAAU,EAEVC,YAAWA,WACT,OAAoB,EAAhBC,KAAKC,SAAe,IAO1BC,YAAWA,SAACC,GACN,KAAKX,OAASW,EAAaC,OAE7B,KAAKZ,OAASW,EAAaC,MAE3BD,EAAaE,WAAY,EAEzBF,EAAaG,QAAUC,EACvBC,QAAQC,IAAIF,GAEZ,KAAKd,WAAWiB,KAAKP,IAIrBK,QAAQC,IAAGE,oBAAAA,OAAqBR,EAAaf,KAAIuB,MAAAA,OAAK,KAAKvB,UAe7D2B,EAAW,CACf,CACE3B,KAAM,OAEN4B,YAAWA,SAACC,GACVT,QAAQC,IAA2D,2DAGvE,CACErB,KAAM,MAEN4B,YAAWA,SAACC,GACVA,EAAOzB,OAAS,IAChBgB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAsB,uBAGhD,CACEA,KAAM,uBACN8B,SAAU,QACVb,WAAW,EACXC,aAASa,EACTf,MAAO,GACPgB,KAAM,EAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,kBACN8B,UAAU,EAEVF,YAAWA,SAACC,GACVT,QAAQC,IAAI,gBACZ,IAAIa,EAA4B,EAAhBtB,KAAKC,SACjBqB,GAAa,GAEfL,EAAOM,aAAe,EACtBf,QAAQC,IAAI,mBACHa,EAAY,GAAKA,GAAa,GAEvCd,QAAQC,IAAI,yBACZQ,EAAOzB,OAAS,IACP8B,EAAY,IAErBd,QAAQC,IAAI,oBACZQ,EAAOzB,OAAS,OAItB,CACEJ,KAAM,gBACN8B,SAAU,QACVb,WAAW,EACXC,aAASa,EACTf,MAAO,GACPgB,KAAM,EAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,aACN8B,SAAU,MAEVF,YAAWA,SAACC,GACNjB,KAAKwB,MAAqB,GAAfP,EAAOzB,OAAe,IACnCyB,EAAOzB,OAAS,IAEhByB,EAAOzB,MAAQQ,KAAKwB,MAAqB,GAAfP,EAAOzB,OAEnCgB,QAAQC,IAAI,mCAGhB,CACErB,KAAM,mBACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,kBACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,EAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,SACN8B,SAAU,OAEVF,YAAWA,WACTR,QAAQC,IAAI,kBAGhB,CACErB,KAAM,iBACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,EAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,qBACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,EAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,gBACN8B,SAAU,WAEVF,YAAWA,SAACC,GACVT,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KACZ,sDAKJ,CACEA,KAAM,oBACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,mBACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,gBACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,kBACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,wBACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,kBACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,kBACN8B,SAAU,OAEVF,YAAWA,WACTR,QAAQC,IAAI,kBAGhB,CACErB,KAAM,mBACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,WACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,gBACN8B,SAAU,UAEVF,YAAWA,WACTR,QAAQC,IAAI,uDAIhB,CACErB,KAAM,kBACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,SACN8B,SAAU,OAEVF,YAAWA,WACTR,QAAQC,IAAI,kBAGhB,CACErB,KAAM,iBACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,kBACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,iBACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,kBACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,cACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,iBACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,iBACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,cACN8B,SAAU,WAEVF,YAAWA,SAACC,GACVA,EAAO3B,aAAe,EACtBkB,QAAQC,IAAI,6DACZQ,EAAOrB,QAAS,IAKpB,CACER,KAAM,iBACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,kBACN8B,SAAU,OAEVF,YAAWA,WACTR,QAAQC,IAAI,kBAGhB,CACErB,KAAM,wBACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,sBACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,sBACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,SACN8B,SAAU,OAEVF,YAAWA,WACTR,QAAQC,IAAI,kBAGhB,CACErB,KAAM,aACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,UAK3D,CACEA,KAAM,aACN8B,SAAU,MAEVF,YAAWA,SAACC,GAGV,GAFAT,QAAQC,IAAGE,wBAAAA,OAAyBM,EAAO7B,KAAO,MAClD6B,EAAOzB,OAAS,GACZyB,EAAOzB,OAAS,EAKlB,OAJA6B,EAAQJ,QACRT,QAAQC,IACN,iEAMR,CACErB,KAAM,YACN8B,SAAU,WACVb,WAAW,EACXC,aAASa,EACTf,MAAO,IACPgB,KAAM,GAGNJ,YAAWA,SAACC,GAIN,KAAKZ,WAAaY,EAAOzB,MAAQ,KAAK4B,MAAQ,GAChDC,EAAQJ,GACRT,QAAQC,IACN,gEAGO,KAAKJ,WAAaY,EAAOzB,MAAQ,KAAK4B,KAAO,GACtDZ,QAAQC,IAAI,6BAA+BtB,EAAQ,KAAKmB,SAASlB,MAEjE6B,EAAOzB,OAAS,KAAK4B,KAGrBjC,EAAQ,KAAKmB,SAASd,OAAS,KAAK4B,KACpCZ,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KAAIuB,iBAAAA,OAAgB,KAAKS,KAAIT,gBAAAA,OACrCxB,EAAQ,KAAKmB,SAASlB,KAAIuB,SAAAA,OACpB,KAAKvB,QAGL,KAAKiB,YAEXY,EAAOlB,YACTkB,EAAOf,YAAYa,EAAS5B,EAAQoB,GAAcjB,eAElDkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAIuB,qBAAAA,OAAoB,KAAKvB,WAOzDmB,EAAe,EACfkB,EAAc,EAElB,SAASJ,EAAQJ,GACf/B,EAAYwB,KAAKO,EAAOV,IACxBU,EAAO1B,YAAa,EACpB0B,EAAOpB,SAAU,EACjBW,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAgC,+BAEtDoB,QAAQC,IAAItB,GAad,IAAIuC,EAAW,WAEb,IAAI7B,EAAU,EAGV8B,EAAS3B,KAAKwB,MAAsB,EAAhBxB,KAAKC,SAAe,GACxC2B,EAAS5B,KAAKwB,MAAsB,EAAhBxB,KAAKC,SAAe,GA6B5C,OA1BI0B,IAAWC,GACbpB,QAAQC,IAAGE,GAAAA,OAAIxB,EAAQoB,GAAcnB,KAAIuB,mBAAAA,OAAkBgB,EAAY,UACvExC,EAAQoB,GAAcV,SAAU,IAEhCA,GAGe,IACbW,QAAQC,IAAGE,GAAAA,OACNxB,EAAQoB,GAAcnB,KAC3B,kDACAD,EAAQoB,GAAcjB,aAAe,EACrCH,EAAQoB,GAAcX,QAAS,EAC/BmB,EAASC,YAAY7B,EAAQoB,OAI/BV,EAAU,EACVV,EAAQoB,GAAcV,SAAU,GAIlC4B,EAAcE,EAASC,EAEvBpB,QAAQC,IAAGE,GAAAA,OAAIxB,EAAQoB,GAAcnB,KAAIuB,cAAAA,OAAac,IAE/CA,GAIT,SAASI,EAAWZ,GACdA,EAAOrB,OAIPqB,EAAO3B,aAAemC,EAAcV,EAASD,OAAS,GAKxDG,EAAO3B,aACL2B,EAAO3B,aAAemC,GAAeV,EAASD,OAAS,GACzDN,QAAQC,IAAIQ,EAAO3B,eAGnB2B,EAAO3B,cAAgBmC,EAI3B,SAASK,EAAWC,GAClBA,EAAMf,YAAY7B,EAAQoB,IAG5B,SAASyB,IACF7C,EAAQoB,GAAcV,SAazBW,QAAQC,IAAGE,GAAAA,OAAIxB,EAAQoB,GAAcnB,KAAyB,wBAC9D6C,EAAW9C,EAAQoB,OAbnBA,GACoBpB,EAAQ2B,OAE1BC,EAAS5B,EADToB,EAAe,GACgBjB,cAC7ByB,EAAS5B,EAAQoB,GAAcjB,eAGjCkB,QAAQC,IAAIF,GACZQ,EAAS5B,EAAQoB,GAAcjB,cAC7ByB,EAAS5B,EAAQoB,GAAcjB,eAYvC,SAAS2C,EAAWhB,GAElB,GAAKA,EAAOrB,OAIL,CAIL,GAHA8B,IACAT,EAAOnB,WAEiB,IAApBmB,EAAOnB,SAOT,OANAmB,EAAO3B,aAAe,GACtB2B,EAAOzB,OAAS,GAChBgB,QAAQC,IAAGE,GAAAA,OACNM,EAAO7B,KACZ,6DACA6B,EAAOpB,SAAU,GAIfoB,EAAOpB,UACToB,EAAO3B,aAAe,GACtBkB,QAAQC,IAAGE,GAAAA,OAAIM,EAAO7B,KAAyC,wCAC/D6B,EAAOpB,SAAU,QApBnB6B,IACAG,EAAWZ,GACXa,EAAWf,EAAS5B,EAAQoB,GAAcjB,eAT9CkB,QAAQC,IAAGE,SAAAA,OAAUxB,EAAQoB,GAAcnB,KAAc,aAiCzD,IAAK,IAAIyB,EAAI,EAAGA,EAAI,GAAIA,IACtBL,QAAQC,IAAO,KACfD,QAAQC,IAAI,aAAeI,GACvB1B,EAAQoB,GAAchB,WACxBiB,QAAQC,IAAGE,0BAAAA,OAA2BxB,EAAQoB,GAAcnB,QAE5DoB,QAAQC,IAAGE,GAAAA,OACNxB,EAAQoB,GAAcnB,KAAIuB,WAAAA,OAC3BI,EAAS5B,EAAQoB,GAAcjB,cAAcF,KAAIuB,cAAAA,OACtCxB,EAAQoB,GAAcf,MACrC,MAEAyC,EAAW9C,EAAQoB,IAInBC,QAAQC,IAAGE,GAAAA,OACNxB,EAAQoB,GAAcnB,KAAIuB,WAAAA,OAC3BI,EAAS5B,EAAQoB,GAAcjB,cAAcF,KAAIuB,cAAAA,OACtCxB,EAAQoB,GAAcf,MACrC,OAEFwC","file":"src.254ade74.js","sourceRoot":"..","sourcesContent":["// import { theBoard } from \"./theBoardSpaces.mjs\";\r\n// const theBoard = theBoard;\r\n// let currentRoll = ;\r\n/***players**/\r\nlet currentPosition = 0;\r\n\r\n//testing functionality for rotating the stage for players turns\r\n// function rotateTheStage() {\r\n//   //delete current\r\n//   const boardPositions = [0, 90, 180, 270, 360];\r\n//   //when it hits 360, it resets to 0\r\n\r\n//   //exchanging styles\r\n//   document\r\n//     .querySelector('#gameBoard')\r\n//     .classList.replace(\r\n//       `stage${boardPositions[currentPosition]}`,\r\n//       `stage${boardPositions[currentPosition + 1]}`\r\n//     );\r\n\r\n//   currentPosition += 1;\r\n//   if (currentPosition === 5) {\r\n//     document\r\n//       .querySelector('#gameBoard')\r\n//       .classList.replace(\r\n//         `stage${boardPositions[currentPosition]}`,\r\n//         `stage${boardPositions[0]}`\r\n//       );\r\n//     console.log('currentPosition is ' + currentPosition);\r\n//     currentPosition = 0;\r\n//     console.log('currentPosition reset to ' + currentPosition);\r\n//   }\r\n// }\r\n\r\n// document\r\n//   .querySelector('#rotateStageButton')\r\n//   .addEventListener('click', rotateTheStage);\r\n\r\nlet playersLost = [];\r\n\r\nlet players = [\r\n  {\r\n    name: 'Dennis',\r\n    piece: 'shoe',\r\n    currentSpace: 1,\r\n    isBankrupt: false,\r\n    money: 1500,\r\n    properties: [],\r\n    propertyNameList: [],\r\n    rrOwned: 0,\r\n    inJail: false,\r\n    doubles: false,\r\n    jailRoll: 0,\r\n\r\n    makeAChoice() {\r\n      if (Math.random() * 1 < 0.5) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n\r\n    buyProperty(thisProperty) {\r\n      if (this.money >= thisProperty.value) {\r\n        //pay for the property\r\n        this.money -= thisProperty.value;\r\n        //set purchased value to true\r\n        thisProperty.purchased = true;\r\n        //set this player as owner\r\n        thisProperty.ownedBy = playerNumber;\r\n        console.log(playerNumber);\r\n        //push this into a list of properties owned by this player\r\n        this.properties.push(thisProperty);\r\n        // console.log(this.name+\" just bought \"+ thisProperty.name + \" for $\"+ thisProperty.value);\r\n        // console.log(`${this.name} now owns ${thisProperty.name}! Enjoy!`);\r\n      } else {\r\n        console.log(`You can't afford ${thisProperty.name}, ${this.name}`);\r\n      }\r\n    },\r\n\r\n    propertyNames() {\r\n      for (let i = 0; i < this.properties.length; i++) {\r\n        this.propertyNameList.push(this.properties[i].name);\r\n        console.log(i);\r\n      }\r\n      return this.propertyNameList;\r\n    }\r\n  },\r\n  {\r\n    name: 'Amanda',\r\n    piece: 'Dog',\r\n    currentSpace: 1,\r\n    isBankrupt: false,\r\n    money: 1500,\r\n    properties: [],\r\n    rrOwned: 0,\r\n    inJail: false,\r\n    doubles: false,\r\n    jailRoll: 0,\r\n\r\n    makeAChoice() {\r\n      if (Math.random() * 1 < 0.5) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n\r\n    buyProperty(thisProperty) {\r\n      if (this.money >= thisProperty.value) {\r\n        //pay for the property\r\n        this.money -= thisProperty.value;\r\n        //set purchased value to true\r\n        thisProperty.purchased = true;\r\n        //set this player as owner\r\n        thisProperty.ownedBy = playerNumber;\r\n        console.log(playerNumber);\r\n        //push this into a list of properties owned by this player\r\n        this.properties.push(thisProperty);\r\n        // console.log(this.name+\" just bought \"+ thisProperty.name + \" for $\"+ thisProperty.value);\r\n        // console.log(`${this.name} now owns ${thisProperty.name}! Enjoy!`);\r\n      } else {\r\n        console.log(`You can't afford ${thisProperty.name}, ${this.name}`);\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Snickers',\r\n    piece: 'Top Hat',\r\n    currentSpace: 1,\r\n    isBankrupt: false,\r\n    money: 1500,\r\n    properties: [],\r\n    rrOwned: 0,\r\n    inJail: false,\r\n    doubles: false,\r\n    jailRoll: 0,\r\n\r\n    makeAChoice() {\r\n      if (Math.random() * 1 < 0.5) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n\r\n    buyProperty(thisProperty) {\r\n      if (this.money >= thisProperty.value) {\r\n        //pay for the property\r\n        this.money -= thisProperty.value;\r\n        //set purchased value to true\r\n        thisProperty.purchased = true;\r\n        //set this player as owner\r\n        thisProperty.ownedBy = playerNumber;\r\n        console.log(playerNumber);\r\n        //push this into a list of properties owned by this player\r\n        this.properties.push(thisProperty);\r\n        // console.log(this.name+\" just bought \"+ thisProperty.name + \" for $\"+ thisProperty.value);\r\n        // console.log(`${this.name} now owns ${thisProperty.name}! Enjoy!`);\r\n      } else {\r\n        console.log(`You can't afford ${thisProperty.name}, ${this.name}`);\r\n      }\r\n    }\r\n  }\r\n];\r\n\r\n/***\r\n * A list of all the properties in the game.\r\n *\r\n * Since we are subtracting the board length from the player location + roll\r\n * to establish what space they land on after they pass GO,\r\n * we will never have a zero sum.\r\n *\r\n * Therefore, jail has been set to 0.\r\n */\r\nconst theBoard = [\r\n  {\r\n    name: 'Jail',\r\n\r\n    spaceAction(player) {\r\n      console.log(`It's $50 to get out of jail, or you can roll doubles.`);\r\n    }\r\n  },\r\n  {\r\n    name: 'GO!',\r\n\r\n    spaceAction(player) {\r\n      player.money += 200;\r\n      console.log(`${player.name} collected $200!`);\r\n    }\r\n  },\r\n  {\r\n    name: 'Mediterranean Avenue',\r\n    propType: 'brown',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 60,\r\n    rent: 2,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Community Chest',\r\n    propType: false,\r\n\r\n    spaceAction(player) {\r\n      console.log('Pick a card!');\r\n      let randoCard = Math.random() * 3;\r\n      if (randoCard <= 1) {\r\n        //advance to GO!\r\n        player.currentspace = 1;\r\n        console.log('Advance to GO!');\r\n      } else if (randoCard < 1 && randoCard <= 2) {\r\n        //pay doctor's fee\r\n        console.log(\"Doctor's Fee. Pay $50\");\r\n        player.money -= 50;\r\n      } else if (randoCard < 2) {\r\n        //inherit $100\r\n        console.log('You inherit $100');\r\n        player.money += 100;\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Baltic Avenue',\r\n    propType: 'brown',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 60,\r\n    rent: 4,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Income Tax',\r\n    propType: 'tax',\r\n\r\n    spaceAction(player) {\r\n      if (Math.floor(player.money * 0.1) > 200) {\r\n        player.money -= 200;\r\n      } else {\r\n        player.money = Math.floor(player.money * 0.9);\r\n      }\r\n      console.log('Thanks for paying your taxes.');\r\n    }\r\n  },\r\n  {\r\n    name: 'Reading Railroad',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 200,\r\n    rent: 25,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Oriental Avenue',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 100,\r\n    rent: 6,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Chance',\r\n    propType: 'card',\r\n\r\n    spaceAction() {\r\n      console.log('Pick a card!');\r\n    }\r\n  },\r\n  {\r\n    name: 'Vermont Avenue',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 100,\r\n    rent: 6,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Connecticut Avenue',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 100,\r\n    rent: 8,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Just Visiting',\r\n    propType: 'visiting',\r\n\r\n    spaceAction(player) {\r\n      console.log(\r\n        `${player.name} looks through the cold bars to the empty cell.`\r\n      );\r\n    }\r\n  },\r\n\r\n  // LEFT SIDE OF BOARD\r\n  {\r\n    name: 'St. Charles Place',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 140,\r\n    rent: 10,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Electric Company',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 150,\r\n    rent: 20,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'States Avenue',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 140,\r\n    rent: 10,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Virginia Avenue',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 150,\r\n    rent: 12,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Pennsylvania Railroad',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 200,\r\n    rent: 10,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'St. James Place',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 180,\r\n    rent: 14,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Community Chest',\r\n    propType: 'card',\r\n\r\n    spaceAction() {\r\n      console.log('Pick a card!');\r\n    }\r\n  },\r\n  {\r\n    name: 'Tennessee Avenue',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 180,\r\n    rent: 14,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'New York',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 200,\r\n    rent: 16,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Free Parking!',\r\n    propType: 'parking',\r\n\r\n    spaceAction() {\r\n      console.log(\"Enjoy the free parking. It won't be free forever.\");\r\n    }\r\n  },\r\n  // TOP ROW\r\n  {\r\n    name: 'Kentucky Avenue',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 200,\r\n    rent: 18,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Chance',\r\n    propType: 'card',\r\n\r\n    spaceAction() {\r\n      console.log('Pick a card!');\r\n    }\r\n  },\r\n  {\r\n    name: 'Indiana Avenue',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 220,\r\n    rent: 18,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'illinois Avenue',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 240,\r\n    rent: 20,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'B & O Railroad',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 200,\r\n    rent: 20,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Atlantic Avenue',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 260,\r\n    rent: 22,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Water Works',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 260,\r\n    rent: 20,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Ventnor Avenue',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 150,\r\n    rent: 22,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Marvin Gardens',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 280,\r\n    rent: 24,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Go to jail!',\r\n    propType: 'goToJail',\r\n\r\n    spaceAction(player) {\r\n      player.currentSpace = 0;\r\n      console.log('Go directly to Jail! Do not pass GO! Don not collect $200');\r\n      player.inJail = true;\r\n    }\r\n  },\r\n\r\n  // RIGHT ROW\r\n  {\r\n    name: 'Pacific Avenue',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 300,\r\n    rent: 26,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Community Chest',\r\n    propType: 'card',\r\n\r\n    spaceAction() {\r\n      console.log('Pick a card!');\r\n    }\r\n  },\r\n  {\r\n    name: 'North Carolina Avenue',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 300,\r\n    rent: 26,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Pennsylvania Avenue',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 320,\r\n    rent: 28,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Short Line Railroad',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 200,\r\n    rent: 25,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Chance',\r\n    propType: 'card',\r\n\r\n    spaceAction() {\r\n      console.log('Pick a card!');\r\n    }\r\n  },\r\n  {\r\n    name: 'Park Place',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 350,\r\n    rent: 35,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Luxury Tax',\r\n    propType: 'tax',\r\n\r\n    spaceAction(player) {\r\n      console.log(`Pay your luxury tax, ${player.name}!`);\r\n      player.money -= 75;\r\n      if (player.money <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        return;\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'Boardwalk',\r\n    propType: 'property',\r\n    purchased: false,\r\n    ownedBy: undefined,\r\n    value: 400,\r\n    rent: 50,\r\n\r\n    //PROPERTY METHOD\r\n    spaceAction(player) {\r\n      //for properties\r\n\r\n      /*** If you can't afford rent */\r\n      if (this.purchased && player.money - this.rent <= 0) {\r\n        youLose(player);\r\n        console.log(\r\n          \"you should lose here, but there's a loop that doesn't care.\"\r\n        );\r\n        /*** If you can afford the rent */\r\n      } else if (this.purchased && player.money - this.rent > 0) {\r\n        console.log('THIS PROPERTY IS OWNED BY ' + players[this.ownedBy].name);\r\n        /***subtract the rent from player */\r\n        player.money -= this.rent;\r\n\r\n        /***Pay the owner of the property */\r\n        players[this.ownedBy].money += this.rent;\r\n        console.log(\r\n          `${player.name} had to pay $${this.rent} in rent to ${\r\n            players[this.ownedBy].name\r\n          } for ${this.name}`\r\n        );\r\n        /***If it's for sale */\r\n      } else if (!this.purchased) {\r\n        //offer sale\r\n        if (player.makeAChoice) {\r\n          player.buyProperty(theBoard[players[playerNumber].currentSpace]);\r\n        } else {\r\n          console.log(`${player.name} declined to buy ${this.name}`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n];\r\n\r\nlet playerNumber = 0;\r\nlet currentRoll = 0;\r\n\r\nfunction youLose(player) {\r\n  playersLost.push(player[playerNumber]);\r\n  player.isBankrupt = true;\r\n  player.doubles = false;\r\n  console.log(`${player.name}, you are broke. You lose.`);\r\n  // players.splice(playerNumber, 1);\r\n  console.log(players);\r\n  return;\r\n}\r\n\r\n/*TYLER DICE\r\n  let rollDice = (n) => {\r\n  return new Array(n).fill(0).reduce((accumulator) => {\r\n    return accumulator + Math.floor(Math.random() * 6 + 1);\r\n  }, 0);\r\n  };\r\n  */\r\n\r\n/***roll dice. Made  2 dice in case of expansion to graphics to match 2 die**/\r\nlet rollDice = () => {\r\n  /***counting the number of doubles player rolls in a row */\r\n  let doubles = 0;\r\n\r\n  /***each die get a roll to establish doubles */\r\n  let dieOne = Math.floor(Math.random() * 6 + 1);\r\n  let dieTwo = Math.floor(Math.random() * 6 + 1);\r\n\r\n  /***if we roll a double */\r\n  if (dieOne === dieTwo) {\r\n    console.log(`${players[playerNumber].name} rolled double ${dieOne}'s!\"`);\r\n    players[playerNumber].doubles = true;\r\n    /***increase the doubles count by one */\r\n    doubles++;\r\n\r\n    /***if we roll 3 doubles in a row, we go to jail*/\r\n    if (doubles >= 3) {\r\n      console.log(\r\n        `${players[playerNumber].name} rolled doubles 3 times and is going to jail!`\r\n      );\r\n      players[playerNumber].currentSpace = 0;\r\n      players[playerNumber].inJail = true;\r\n      theBoard.spaceAction(players[playerNumber]);\r\n    }\r\n  } else {\r\n    /***If we don't roll doubles, set double to 0 */\r\n    doubles = 0;\r\n    players[playerNumber].doubles = false;\r\n  }\r\n\r\n  /***add combined roll */\r\n  currentRoll = dieOne + dieTwo;\r\n\r\n  console.log(`${players[playerNumber].name} rolled a ${currentRoll}`);\r\n\r\n  return currentRoll;\r\n};\r\n\r\n/***takes result of diceRoll and moves the player**/\r\nfunction movePlayer(player) {\r\n  if (player.inJail) {\r\n  }\r\n\r\n  /***if the total is bigger than the board */\r\n  if (player.currentSpace + currentRoll > theBoard.length - 1) {\r\n    /***  player.currentSpace = the current player's space to  the result of\r\n     * subtracting the playerSpace+currentRoll - theBoard length\r\n     * This should result in the correct space number;\r\n     */\r\n    player.currentSpace =\r\n      player.currentSpace + currentRoll - (theBoard.length - 1);\r\n    console.log(player.currentSpace);\r\n  } else {\r\n    /*** just add the roll to the space */\r\n    player.currentSpace += currentRoll;\r\n  }\r\n}\r\n\r\nfunction whichSpace(space) {\r\n  space.spaceAction(players[playerNumber]);\r\n}\r\n\r\nfunction switchPlayer() {\r\n  if (!players[playerNumber].doubles) {\r\n    playerNumber++;\r\n    if (playerNumber >= players.length) {\r\n      playerNumber = 0;\r\n      theBoard[players[playerNumber].currentSpace] =\r\n        theBoard[players[playerNumber].currentSpace];\r\n    } else {\r\n      // players[playerNumber] = players[playerNumber];\r\n      console.log(playerNumber);\r\n      theBoard[players[playerNumber].currentSpace] =\r\n        theBoard[players[playerNumber].currentSpace];\r\n    }\r\n  } else {\r\n    console.log(`${players[playerNumber].name} gets another turn!`);\r\n    playerTurn(players[playerNumber]);\r\n  }\r\n}\r\n\r\nconsole.log(`It is ${players[playerNumber].name}'s turn!`);\r\n\r\n/***takes the current space value of the player and uses it to find the name of the current space on the board\r\n **/\r\nfunction playerTurn(player) {\r\n  // let player = players[playerNumber];\r\n  if (!player.inJail) {\r\n    rollDice();\r\n    movePlayer(player);\r\n    whichSpace(theBoard[players[playerNumber].currentSpace]);\r\n  } else {\r\n    rollDice();\r\n    player.jailRoll++;\r\n\r\n    if (player.jailRoll === 4) {\r\n      player.currentSpace = 11;\r\n      player.money -= 50;\r\n      console.log(\r\n        `${player.name} has served their term in jail and paid their fine.`\r\n      );\r\n      player.doubles = false;\r\n      return;\r\n    }\r\n\r\n    if (player.doubles) {\r\n      player.currentSpace = 11;\r\n      console.log(`${player.name} rolled doubles and is out of jail.`);\r\n      player.doubles = false;\r\n    }\r\n  }\r\n}\r\n\r\n/***mimic player activity**/\r\nfor (let i = 0; i < 60; i++) {\r\n  console.log(` `);\r\n  console.log(`ITERATION ` + i);\r\n  if (players[playerNumber].isBankrupt) {\r\n    console.log(`No more turns for you, ${players[playerNumber].name}`);\r\n  } else {\r\n    console.log(\r\n      `${players[playerNumber].name} is on ${\r\n        theBoard[players[playerNumber].currentSpace].name\r\n      } and has $${players[playerNumber].money}.`\r\n    );\r\n    // inJail(player)\r\n    playerTurn(players[playerNumber]);\r\n    // rollDice();\r\n    // movePlayer(players[playerNumber]);\r\n    // whichSpace(theBoard[players[playerNumber].currentSpace]);\r\n    console.log(\r\n      `${players[playerNumber].name} is on ${\r\n        theBoard[players[playerNumber].currentSpace].name\r\n      } and has $${players[playerNumber].money}.`\r\n    );\r\n  }\r\n  switchPlayer();\r\n}\r\n"]}